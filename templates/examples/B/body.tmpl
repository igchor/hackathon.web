{{top "Memory accessing example"}}

<p class="intro">

In this example you'll learn how to simplify memory allocation using memkind library. It builds on a previous
exaple and reuses some of the code.

<p>

{{step "Using memkind to allocate memory with desired charactersistics"}}

<p>

The following scripts prints list of available NUMA nodes and their characteristics.
Those characteristics can be used by an application to decide where to put certain data,
to minimize access latency or maximize bandwith.

<p>
"memkind.c" ilustrates how to allocate memory with desired characteristics withouth knowing the numa node id.
<p>
"numa_helpers.h" contain helpers functions to find appropriate numa node and verify where specific page resides.

{{edit "memkind.c" "numa_helpers.h" "Makefile"}}

<p>

{{build "make"}}

<p>
If the programs built without errors, continue on to the next step below.

{{step "Run"}}

<p>

Of course, you should feel free to edit the script below and run it
again and again, to experiment with different commands.

{{edit "run_examples.sh"}}

<p>
Now you can try running the program using the above commands.

{{run "./run_examples.sh"}}

{{summary}}

<p>

This example showed how to discover available memory on the system and how to utilze it using
native linux calls and using memkind.

{{bottom}}
