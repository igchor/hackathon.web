{{top "Memory accessing example"}}

<p class="intro">

In this example you'll learn how to simplify memory allocation using memkind library. It builds on a previous exaple and reuses some of the code presented there.

<p>
Memkind library is a user extensible heap manager built on top of jemalloc which enables control of memory characteristics and a partitioning of the heap between kinds of memory.
<p>
Memkind provides a higher-level API than the one presented in the previous example. Unlike mmap, memkind can be used for fine-grain allocations.

<p>
To learn more about memkind, visit:
<p>
https://pmem.io/blog/2021/05/memkind-support-for-heterogeneous-memory-attributes/
<p>
https://github.com/memkind/memkind

<p>

{{step "Using memkind to allocate memory with desired charactersistics"}}

<p>

<p>
"memkind.c" ilustrates how to allocate memory with desired characteristics withouth knowing the numa node id.
<p>
"numa_helpers.h" contain helpers functions to find appropriate numa node and verify where specific page resides.

{{edit "memkind.c" "numa_helpers.h" "Makefile"}}

<p>

{{build "make"}}

<p>
If the programs built without errors, continue on to the next step below.

{{step "Run"}}

<p>

Of course, you should feel free to edit the script below and run it
again and again, to experiment with different commands.

{{edit "run_examples.sh"}}

<p>
Now you can try running the program using the above commands.

{{run "./run_examples.sh"}}

{{summary}}

<p>

This example showed how to allocate memory with different characteristics using memkind.

{{bottom}}
